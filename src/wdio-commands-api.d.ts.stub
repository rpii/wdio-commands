// Merge namespace with global WebdriverIO
declare global {

    export namespace WebdriverIO {
        interface Element {
            setCheckBox: (state: boolean) => void;
            setInputValue: (fx:any, value: string) => void;
            isDisplayedWithin: (timeout?: undefined | number) => boolean;
            waitForExistAndClick: (timeout?: undefined | number) => void;
            waitForDisplayedAndClick: (timeout?: undefined | number) => void;
            waitForEnabledAndClick: (timeout?: undefined | number) => void;
            waitForExistAndSetValue: (value: string, timeout?: undefined | number) => void;
            waitForExistAndSelectByValue: (value: string, timeout?: undefined | number) => void;
            waitForDisplayedAndSetValue: (value: string, timeout?: undefined | number) => void;
            waitForEnabledAndSetValue: (value: string, timeout?: undefined | number) => void;
            waitForNotExist: (timeout?: undefined | number) => void;
            waitForNotDisplayed: (timeout?: undefined | number) => void;
            waitUntilTextBecomes: (text:string|RegExp, timeout?: number| undefined) => boolean;
        }
        interface Browser {
            logMessage: (message: string) => void;
            logScreenshot: (message: string, outputDirectory?: string) => void;
            addCommand: (name: string, func:Function, force?:boolean) => void;

        }
        interface MultiRemoteBrowser  {
            logMessage: (message: string) => void;
            logScreenshot: (message: string, outputDirectory?: string) => void;
            addCommand: (name: string, func:Function, force?:boolean) => void;

        }
    }
}

